import plugin from '../../lib/plugins/plugin.js'
import common from '../../lib/common/common.js'
//import fetch from 'node-fetch'
import schedule from 'node-schedule'
//import { segment } from 'oicq'

// 定时发送时间，采用 Cron 表达式，当前默认为每日 9:00 分推送
const time = '0 0 9 * * ?'

// 指定定时发送的群号
const groupList = ['131415', '7654321', '1234567']

// 是否开启定时推送，默认为 false
const isAutoPush = true

autoTask()

let randomHellowPaimon = ['看我超级派蒙旋风！',
    '我是派蒙，你的旅行伙伴，快来和我聊聊天吧！我有很多有趣的故事和知识要和你分享，还可以帮你写诗画画哦！',
    '救命啊，有变态！',
    '你好，我是派蒙，你的旅行伙伴，你想和我聊些什么呢？我可以帮你做很多事情哦',
    '呜呜，有人能和派蒙聊聊天吗？',
    '我是派蒙，你最好的伙伴，你今天过得怎么样呢？',
    '派蒙好寂寞哦~~',
    '有人，，，有人可以陪派蒙玩吗？',
    '我是派蒙，你最好的伙伴，你有什么兴趣爱好呢？',
    '派蒙今天，又勇敢地抓到了花纹奇怪的蜥蜴，从没见过这种图案，你要看看吗？',
    '带派蒙出去玩吧，我们一起来冒险。',
    '派蒙，前来报到。呃，后面该说什么词来着？派蒙背不下来啦。',
    '派蒙不是小孩子了，派蒙也可以出去玩。唔~~~，带我出去玩~~~',
    '要和派蒙一起去炸鱼吗？虽然被抓住就是一整天的禁闭，但鱼很好吃，所以值得。',
    '你是不是喜欢派蒙呢？',
    '你好，你是来找派蒙玩的吗？',
    '变态萝莉控在哪里？',
    '这是嘟嘟可，是派蒙很久以前就交到的好朋友，要记得它的名字哦',
    '谢谢你总是帮派蒙解决麻烦，就用这串「派蒙烤鱼」来报答你吧。呃，其实鱼是直接在湖里就被炸弹烤熟了，不过这件事，就和平时一样，假装不知道好了。',
    '派蒙喜欢毛茸茸的东西，比如嘟嘟可，蒲公英，还有，，，还有你的头发。',
    '唉，你是好人，派蒙是坏孩子。等派蒙这次的禁闭结束，好好反省过以后，再来找你带我出去玩。',
    '你刚刚是不是想派蒙了，派蒙也想你哦~',
    '讨厌蒙德蟹，什么蟹都讨厌。派蒙要出去玩，不要坐在餐桌前慢慢剥壳。',
    '很久以前，第一次听到爆炸声的时候，我没有害怕，后来我才知道，大部分人不是这样的。不过，你也不害怕我的炸弹呢，嘿嘿，太好了，派蒙果然交到了很好的朋友。',
    '我们是不会分开的，对吗？我们还要一起走很远很远的路，度过好久好久的时光。然后，等你找到家人了，我们就拉上好多好多朋友，把这些事全都讲给你的家人听。',
    '呜…派蒙理解。要是有一天派蒙和你分开了，派蒙也一定习惯不了…可能还会对着空气自言自语…',
    '派蒙今年的生日愿望，就是希望能够一直陪在你身边',
    '派蒙的愿望就是实现你的愿望哦。',
    '没错！你的幸福就是派蒙的幸福呀！所以反过来说，派蒙幸福，你也幸福。',
    '我们是不会分开的，对吗？我们还要一起走很远很远的路，度过好久好久的时光。',
    '进不去！怎么想都进不去吧？！',
    '派蒙已经关注你很久了。派蒙叫派蒙，别看派蒙像个孩子，派蒙比任何一位大人都了解这个世界。所以，派蒙可以用派蒙的知识，换取你路上的见闻吗？',
    '不知道干什么的话，要不要派蒙带你去转转呀？',
    '又有心事吗？派蒙来陪你一起想吧。',
    '天气真好啊，暖洋洋的，我们的身边马上也要热闹起来了。',
    '派蒙想喝树莓薄荷饮。用两个和太阳有关的故事和你换，好不好？',
    '派蒙早就不满足于当一个听众了，一直都想出去看看。你冒险经验这么丰富，当派蒙的向导好不好啊？你之后所有的故事，派蒙都想亲身感受。',
    '就这么看着你，算是爱好吗？因为你的一举一动都让派蒙很好奇啊。']


export class example extends plugin {
  constructor() {
    super({
      name: '派蒙每日自动发言',
      dsc: '派蒙每日自动发言',
      event: 'message',
      priority: 5000,
      rule: [
        {
          reg: '^#派蒙每日自动发言$',
          fnc: 'PaimonDaily'
        }
      ]
    })
  }

  async PaimonDaily(e) {
    PaimonDailyPush(e)
  }
}


async function PaimonDailyPush(e, isAuto = 0) {
  // e.msg 用户的命令消息
  if (e.msg) {
    logger.info('[派蒙每日自动发言用户命令]', e.msg)
  }

  // 随机一句
  let text_number = Math.ceil(Math.random() * randomHellowPaimon['length'])

  // 回复消息
  if (isAuto) {
    await e.reply(randomHellowPaimon[text_number - 1])
  } else {
    await e.reply(randomHellowPaimon[text_number - 1])
  }
}

/**
 * 定时任务
 */
function autoTask() {
  if (isAutoPush) {
    schedule.scheduleJob(time, () => {
      logger.info('[派蒙每日自动发言]：开始自动推送...')
      for (let i = 0; i < groupList.length; i++) {
        let group = Bot.pickGroup(groupList[i])
        PaimonDailyPush(group, 1)
        common.sleep(1000)
      }
    })
  }
}
